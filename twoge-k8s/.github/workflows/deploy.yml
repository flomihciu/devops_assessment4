name: Deploy Twoge App to EKS

on:
  workflow_dispatch:  # Only manual trigger
  # Removed the push event trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URI }}

      - name: Build and Push Docker Image to ECR
        run: |
          docker build -t ${{ secrets.ECR_REPO_URI }} ./twoge
          docker push ${{ secrets.ECR_REPO_URI }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          kubectl apply -f twoge-k8s/namespace.yml
          kubectl apply -f twoge-k8s/configmap.yml

          # Dynamically create secret from GitHub secrets
          kubectl create secret generic twoge-secrets \
            --namespace=twoge \
            --from-literal=DATABASE_USER=${{ secrets.DB_USER }} \
            --from-literal=DATABASE_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

          kubectl apply -f twoge-k8s/database/
          kubectl apply -f twoge-k8s/flo-k8-app/
          kubectl apply -f twoge-k8s/storage/ || true
