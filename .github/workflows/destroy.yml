name: Destroy Flo EKS Cluster and App (Safe)

on:
  workflow_dispatch:

jobs:
  destroy-flo-infra:
    name: Tear Down EKS Cluster and App for Flo
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Update kubeconfig for Flo's cluster
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Delete Kubernetes namespace 'flo-twoge'
        run: |
          kubectl delete namespace flo-twoge --ignore-not-found=true

      - name: Detach AmazonEBSCSIDriverPolicy (if role exists)
        run: |
          echo "Finding nodegroup stack..."
          STACK_NAME=$(aws cloudformation list-stacks \
            --region ${{ secrets.AWS_REGION }} \
            --stack-status-filter CREATE_COMPLETE UPDATE_COMPLETE \
            --query "StackSummaries[?starts_with(StackName, 'eksctl-${{ secrets.EKS_CLUSTER_NAME }}-nodegroup')].StackName" \
            --output text)

          if [[ -n "$STACK_NAME" ]]; then
            echo "Found stack: $STACK_NAME"
            ROLE_ARN=$(aws cloudformation describe-stacks \
              --region ${{ secrets.AWS_REGION }} \
              --stack-name "$STACK_NAME" \
              --query "Stacks[0].Outputs[?OutputKey=='NodeInstanceRole'].OutputValue" \
              --output text)
            ROLE_NAME=$(basename "$ROLE_ARN")

            echo "Detaching AmazonEBSCSIDriverPolicy from role: $ROLE_NAME"
            aws iam detach-role-policy \
              --role-name "$ROLE_NAME" \
              --policy-arn arn:aws:iam::aws:policy/AmazonEBSCSIDriverPolicy || echo "Detach failed (possibly already removed)"
          else
            echo "No matching stack found â€” skipping IAM detachment"
          fi

      - name: Delete Flo's EKS Cluster Only (Preserve VPC, IAM, etc.)
        run: |
          eksctl delete cluster \
            --name ${{ secrets.EKS_CLUSTER_NAME }} \
            --region ${{ secrets.AWS_REGION }} \
            --disable-nodegroup-eviction \
            --wait
